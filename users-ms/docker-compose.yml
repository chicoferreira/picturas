services:
  db-users-ms:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - db-users-ms:/var/lib/postgresql/data
    networks:
      - picturas-network
    healthcheck:
      test: pg_isready -U ${PG_USER} -d ${PG_DATABASE} -h localhost
  redis-users-ms:
    image: redis:6.2.6-alpine
    restart: always
    networks:
      - picturas-network
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
  users-ms:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PG_HOST=db-users-ms
      - PG_PORT=5432
      - PG_USER
      - PG_PASSWORD
      - PG_DATABASE
      - REDIS_HOST=redis-users-ms
      - REDIS_PASSWORD
      - BIND_IP
      - BIND_PORT
      - REFRESH_TOKEN_MAX_AGE
      - ACCESS_TOKEN_MAX_AGE
      - ACCESS_TOKEN_PUBLIC_KEY=/run/secrets/access_token_public_key
      - ACCESS_TOKEN_PRIVATE_KEY=/run/secrets/access_token_private_key
      - REFRESH_TOKEN_PUBLIC_KEY=/run/secrets/refresh_token_public_key
      - REFRESH_TOKEN_PRIVATE_KEY=/run/secrets/refresh_token_private_key
      - RUST_LOG=DEBUG
    secrets:
      - refresh_token_private_key
      - refresh_token_public_key
      - access_token_private_key
      - access_token_public_key
    networks:
      - picturas-network
    depends_on:
      db-users-ms:
        condition: service_healthy
      redis-users-ms:
        condition: service_started
volumes:
  db-users-ms:
  redis-data: